{ stdenv
, lib
, fetchFromGitHub
, electron
, makeDesktopItem
, nodejs

# auxilary dep to scuttle-shell - needs to avail at runtime
, systrayhelper

# bunbled electron linking foo - needs to GO!
, glibc, zlib, fuse, cairo, atk,  udev, dbus, gtk3, pango,  gdk_pixbuf, glib, libX11, libXScrnSaver, libXcomposite, libXcursor
, libXdamage, libXext, libXfixes, libXi, libXrandr, libXrender, libXtst,  libxcb, gnome2, nss, nspr,alsaLib, cups, fontconfig, expat
}:

let
  deps = [
    alsaLib
    atk
    cairo
    cups
    dbus 
    expat
    fontconfig
    fuse
    gdk_pixbuf
    glib
    gtk3
    gnome2.GConf
    libX11
    libXScrnSaver
    libXcomposite
    libXcursor
    libxcb
    libXdamage
    libXext
    libXfixes
    libXi
    libXrandr
    libXrender
    libXtst
    nspr
    nss
    pango
    stdenv.cc.cc 
    udev
    zlib.out
  ];
  rpath = lib.makeLibraryPath deps;

  # generated by node2nix with added propagated deps
  taleNodeEnv = (import ./talenet-nodeEnv.nix {}).package;

in stdenv.mkDerivation rec {
  name = "talenet-${version}";
  version = "v0.9.0-beta1.1";

  src = fetchFromGitHub {
    rev = version;
    owner = "talenet";
    repo = "talenet";
    sha256 = "0aqyvskisbj91drv27dmqyydwl5plm9rylym3jcwkggw58cdlkaz";
  };

  desktopItem = makeDesktopItem {
    name = "talenet";
    exec = "talenet";
    icon = "$out/share/talenet/";
    comment = "Decentralized messanging and sharing app"; 
    desktopName = "tale:net";
    genericName = "Talenet";
    categories = "Network;";
  };

  phases = [ "installPhase" "fixupPhase"];

  buildIntputs = [ deps nodejs taleNodeEnv electron];

  installPhase = ''
    mkdir -p $out/npmInstall
    cd $out/npmInstall
    cp -vr ${taleNodeEnv} .
    ${nodejs}/bin/node .electron-vue/build.js
    # todo mkwrapper talenet >> {electron}/bin/electron dist .
  '';

  # TODO mkwrapper electron?
  fixupPhase = ''
    patchelf \
      --set-interpreter "$(cat $NIX_CC/nix-support/dynamic-linker)" \
      --set-rpath ${rpath}:$out/libexec \
      $out/node_modules/.bin/talenet 
  '';

  meta = {
    description = "The intergalactic skill & idea sharing community.";
    homepage    = https://t4l3.net;
    license     = lib.licenses.agpl3;
    maintainers = with lib.maintainers; [ cryptix ];
    platforms   = [ "x86_64-linux" ];
  };
}
